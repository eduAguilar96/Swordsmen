<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize varibles variables

//====Player lives
global.inital_player_lifes = 5;
global.player_lifes = global.inital_player_lifes;

//====boolean variables
show_combo = false;
is_level = true;

//====Players
global.p1_on = true;
global.p2_on = false;
global.p3_on = false;
global.p4_on = false;
global.p5_on = false;
global.p6_on = false;
global.p7_on = false;
global.p8_on = false;

global.num_players = 1;

global.p1_dead = false;
global.p2_dead = false;
global.p3_dead = false;
global.p4_dead = false;
global.p5_dead = false;
global.p6_dead = false;
global.p7_dead = false;
global.p8_dead = false;

global.p1_in_area = false;
global.p2_in_area = false;
global.p3_in_area = false;
global.p4_in_area = false;
global.p5_in_area = false;
global.p6_in_area = false;
global.p7_in_area = false;
global.p8_in_area = false;

//====pause, intento de edu
global.pause = false;

//====invincible
invincible = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///RESET COMBO
global.totalCombo = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//====Show combo when above 1
if(global.totalCombo &gt; 1){
    show_combo = true;
}else{
    show_combo = false;
}

//====pause overlay test
if(keyboard_check_pressed(vk_escape) 
    || gamepad_button_check_pressed(0,gp_start)
    || gamepad_button_check_pressed(1,gp_start)
    || gamepad_button_check_pressed(2,gp_start)
    || gamepad_button_check_pressed(3,gp_start)){
        if(global.pause){
            global.pause = false;
            //instance_deactivate_all(true);
        }else{
            global.pause = true;
            //instance_deactivate_all(true);    
        }
}



//number of players
global.num_players = global.p1_on + global.p2_on + global.p3_on + global.p4_on + global.p5_on + global.p6_on + global.p7_on + global.p8_on;
global.dead_players = global.p1_dead + global.p2_dead + global.p3_dead + global.p4_dead + global.p5_dead + global.p6_dead + global.p7_dead + global.p8_dead;

if(global.player_lifes &lt;= 0 &amp;&amp; global.num_players == global.dead_players){
    game_restart();
}

//====Infinite lives for Demo
if(keyboard_check_pressed(ord('L'))){
    if(global.inital_player_lifes = 5){
        global.inital_player_lifes = 1000;
        global.player_lifes = 1000;
    }else{
        global.inital_player_lifes = 5;
        global.player_lifes = 5;
    }
}

if(keyboard_check_pressed(ord('I'))){
    if(invincible){
        invincible = false;
    }else{
        invincible = true;
    }
}
if(invincible){
    if(instance_exists(obj_mc)){
        obj_mc.hp = 100;
    }
    if(instance_exists(obj_mc_2)){
        obj_mc_2.hp = 100;
    }
    if(instance_exists(obj_mc_3)){
        obj_mc_3.hp = 100;
    }
    if(instance_exists(obj_mc_4)){
        obj_mc_4.hp = 100;
    }
}

if(keyboard_check_pressed(ord('N'))){
    if(instance_exists(obj_mc)){
        obj_mc.state = states.normal;
    }
    if(instance_exists(obj_mc_2)){
        obj_mc_2.state = states.normal;
    }
    if(instance_exists(obj_mc_3)){
        obj_mc_3.state = states.normal;
    }
    if(instance_exists(obj_mc_4)){
        obj_mc_4.state = states.normal;
    }
}

if(keyboard_check_pressed(ord('Q'))){
    room_goto(level_menu);
}
if(keyboard_check_pressed(ord('P'))){
    room_goto(level_select);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//====manage controller detection and players
//player 1 is allways true
if(gamepad_is_connected(1)){
    global.p2_on = true;
}else{
    global.p2_on = false;
}
if(gamepad_is_connected(2)){
    global.p3_on = true;
}else{
    global.p3_on = false;
}
if(gamepad_is_connected(3)){
    global.p4_on = true;
}else{
    global.p4_on = false;
}
if(gamepad_is_connected(4)){
    global.p5_on = true;
}else{
    global.p5_on = false;
}
if(gamepad_is_connected(5)){
    global.p6_on = true;
}else{
    global.p6_on = false;
}
if(gamepad_is_connected(6)){
    global.p7_on = true;
}else{
    global.p7_on = false;
}
if(gamepad_is_connected(7)){
    global.p8_on = true;
}else{
    global.p8_on = false;
}

//Spawn the player at the beginning of each room
if(instance_exists(obj_player_spawn)){
    instance_create(obj_player_spawn.x,obj_player_spawn.y,obj_mc)
    if(global.p2_on) instance_create(obj_player_spawn.x + 20,obj_player_spawn.y,obj_mc_2);
    if(global.p3_on) instance_create(obj_player_spawn.x + 40,obj_player_spawn.y,obj_mc_3);
    if(global.p4_on) instance_create(obj_player_spawn.x + 60,obj_player_spawn.y,obj_mc_4);
    is_level = true;
}else{
    is_level = false;
}
//====Control view
if(is_level &amp;&amp; global.num_players &gt; 1){
    instance_create(obj_player_spawn.x,obj_player_spawn.y,obj_mc_view_control)
}else{
    view_object[0] = obj_mc;
}

//====Music determination
if(room == level_menu){
    audio_stop_all();
    audio_play_sound(snd_music_evangelion, 10, true);
}
if(room == level_select){
    audio_stop_all();
    audio_play_sound(snd_music_arpanauts, 10, true);
}
if(room == level_0){
    audio_stop_all();
    audio_play_sound(snd_music_jumpshot, 10, true);
}
if(room == level_1){
    audio_stop_all();
    audio_play_sound(snd_music_allofus, 10, true);
}
if(room == level_2){
    audio_stop_all();
    audio_play_sound(snd_music_arpanauts, 10, true);
}
if(room == level_3){
    audio_stop_all();
    audio_play_sound(snd_music_jumpshot, 10, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Score and Health

if(is_level){
    //Draw SCORE and lives
    if(invincible){
        draw_set_color(c_white);
    }else{
        draw_set_color(c_black);
    }
    draw_set_halign(fa_right);
    draw_set_font(fnt_adventure);
    draw_text(view_xview[0] + view_wport[0] - 20 + 2,view_yview[0] + 10 + 2, "Score: " + string(global.gameScore) + "#Lives: " + string(global.player_lifes) + "/" + string(global.inital_player_lifes));

    if(invincible){
        draw_set_color(c_blue);
    }else{
        draw_set_color(c_white);
    }
    draw_set_halign(fa_right);
    draw_set_font(fnt_adventure);
    draw_text(view_xview[0] + view_wport[0] - 20,view_yview[0] + 10, "Score: " + string(global.gameScore) + "#Lives: " + string(global.player_lifes) + "/" + string(global.inital_player_lifes)); 
    
    if(global.p1_on &amp;&amp; !global.p1_dead){
        //Draw stamina &amp; health p1
        draw_set_color(c_black);
        draw_set_halign(fa_left);
        draw_set_font(fnt_adventure);
        draw_text(view_xview[0] + 20 + 2,view_yview[0] + 10 + 2, "HP : " + string(obj_mc.hp) + "/" + string(obj_mc.maxhp) + "#SP : " + string(obj_mc.dash_bank) + "/" + string(obj_mc.initial_dash_bank));

        draw_set_color(c_white);
        draw_set_halign(fa_left);
        draw_set_font(fnt_adventure);
        draw_text(view_xview[0] + 20,view_yview[0] + 10, "HP : " + string(obj_mc.hp) + "/" + string(obj_mc.maxhp) + "#SP : " + string(obj_mc.dash_bank) + "/" + string(obj_mc.initial_dash_bank));
    }
    if(global.p2_on &amp;&amp; !global.p2_dead){
        //Draw stamina &amp; health p2
        draw_set_color(c_black);
        draw_set_halign(fa_left);
        draw_set_font(fnt_adventure);
        draw_text(view_xview[0] + 350 + 2,view_yview[0] + 10 + 2, "HP : " + string(obj_mc_2.hp) + "/" + string(obj_mc_2.maxhp) + "#SP : " + string(obj_mc_2.dash_bank) + "/" + string(obj_mc_2.initial_dash_bank));

        draw_set_color(c_red);
        draw_set_halign(fa_left);
        draw_set_font(fnt_adventure);
        draw_text(view_xview[0] + 350,view_yview[0] + 10, "HP : " + string(obj_mc_2.hp) + "/" + string(obj_mc_2.maxhp) + "#SP : " + string(obj_mc_2.dash_bank) + "/" + string(obj_mc_2.initial_dash_bank));
    }
    if(global.p3_on &amp;&amp; !global.p3_dead){
        //Draw stamina &amp; health p3
        draw_set_color(c_black);
        draw_set_halign(fa_left);
        draw_set_font(fnt_adventure);
        draw_text(view_xview[0] + 680 + 2,view_yview[0] + 10 + 2, "HP : " + string(obj_mc_3.hp) + "/" + string(obj_mc_3.maxhp) + "#SP : " + string(obj_mc_3.dash_bank) + "/" + string(obj_mc_3.initial_dash_bank));

        draw_set_color(c_green);
        draw_set_halign(fa_left);
        draw_set_font(fnt_adventure);
        draw_text(view_xview[0] + 680,view_yview[0] + 10, "HP : " + string(obj_mc_3.hp) + "/" + string(obj_mc_3.maxhp) + "#SP : " + string(obj_mc_3.dash_bank) + "/" + string(obj_mc_3.initial_dash_bank));
    }
    if(global.p4_on &amp;&amp; !global.p4_dead){
        //Draw stamina &amp; health p4
        draw_set_color(c_white);
        draw_set_halign(fa_left);
        draw_set_font(fnt_adventure);
        draw_text(view_xview[0] + 1010 + 2,view_yview[0] + 10 + 2, "HP : " + string(obj_mc_4.hp) + "/" + string(obj_mc_4.maxhp) + "#SP : " + string(obj_mc_4.dash_bank) + "/" + string(obj_mc_4.initial_dash_bank));

        draw_set_color(c_black);
        draw_set_halign(fa_left);
        draw_set_font(fnt_adventure);
        draw_text(view_xview[0] + 1010,view_yview[0] + 10, "HP : " + string(obj_mc_4.hp) + "/" + string(obj_mc_4.maxhp) + "#SP : " + string(obj_mc_4.dash_bank) + "/" + string(obj_mc_4.initial_dash_bank));
    }
    
    //Draw COMBO if higher than 2
    if(show_combo){
        draw_set_color(c_black);
        draw_set_halign(fa_right);
        draw_set_font(fnt_karmaFuture);
        draw_text(view_xview[0] + view_wport[0] - 20 + 2,view_yview[0] + 90 + 2, "COMBO: "  + string(global.totalCombo) + "#" + string(alarm[0]/room_speed));    

        draw_set_color(c_red);
        draw_set_halign(fa_right);
        draw_set_font(fnt_karmaFuture);
        draw_text(view_xview[0] + view_wport[0] - 20,view_yview[0] + 90, "COMBO: "  + string(global.totalCombo) + "#" + string(alarm[0]/room_speed)); 
    }

    //Draw pause if global.pause = true
    if(global.pause){
        draw_set_color(c_black);
        draw_set_alpha(0.5);
        draw_rectangle(0,0,room_width * 10, room_height * 10,0);
        draw_set_halign(fa_center);
        draw_set_font(fnt_karmaFuture);
        draw_set_color(c_white);
        draw_set_alpha(1);
        draw_text(view_xview[0] + 300,view_yview[0] + 300, "Game Paused");    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

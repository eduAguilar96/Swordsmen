<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprt_mob_golem_walk</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>-1</persistent>
  <parentName>obj_mob_father</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize variables

//====Movement variabels
grav = 0.2;                     //gravity
hsp = 0;                        //horizontal speed
vsp = 0;                        //vertical speed
jumpspeed = 8;                  //jump upward speed
initial_movespeed = 0.5;        //jumpspeed variable constanlty afected by charachter states
movespeed = initial_movespeed;  //pixels per second speed
image_speed = 0.1;              //initial animation speed (idle)
move = 0;                       //move direction variables

//====Toogleable/editable variabels
fear_of_heights = true;         //if TRUE enemy will turn around on edges
kill_score = 750;

//====Stats
maxhp = 750;                    //initial/max health
hp = maxhp;                     //health variables afected by code

//====Atack and damage
attacking = false;          //variable to determine if in attack state
damage = 10;                //damage it deals on touch and/or atrtack state
attack_damage = 75;
can_take_damage = true;      //variable that controls taking damge cooldown

detection_range = 450;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enable "Can take damge" property &amp; kill
can_take_damage = true;


if(hp &lt;= 0){
    global.totalCombo++;
    if(global.totalCombo == 2){
        audio_play_sound(snd_effect_combo,10,false);
    }
    global.gameScore += kill_score * global.totalCombo;
    obj_game_manager.alarm[0] = global.comboTime;
       
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////////////BASIC Golem CODE////////////

//====Movement
hsp = move * movespeed;                 //horizontal speed is direction * speed

if (vsp &lt; 10){                          //Start adding gravity to vertical speed
    vsp += grav;
}

if(move != 0){
    image_xscale = move;
}

//====Colissions &amp; behavior with it
 
if (place_meeting(x+hsp * 8,y,obj_wall)){   //Horizontal Collision
    while(!place_meeting(x+sign(hsp) + hsp * 8,y,obj_wall)){ 
        x += sign(hsp); 
    } 
    hsp = 0; 
    
}   
x += hsp;                               //Add horizontal speed to current position

if (place_meeting(x,y+vsp,obj_wall)){   //Vertical Collision 
    while(!place_meeting(x,y+sign(vsp),obj_wall)){ 
        y += sign(vsp); 
    } 
    vsp = 0; 
    
                                        //Turn around on edges if fear of heights on
    if(fear_of_heights &amp;&amp; !position_meeting(x + (sprite_height/2) * move, y+(sprite_height/2) + 80, obj_wall)){
        move = 0; 
    }
} 
y += vsp;

//====Manage player's attacks collision 
if(can_take_damage){                        //if can take damage
    with(instance_place(x,y,obj_mc_attack)){//return id of  colliding instance if it is mc_attack
        other.can_take_damage = false;      //toglle can_take_damge to false
        other.hp -= damage;                 //subtract health
        other.alarm[0] = alarm[0];          //set can_take_damage timer to remainig attacks lifetime timer
        
        instance_create(other.x,other.y,obj_hit);   //play hit animation
    }
    image_blend = c_white;
    movespeed = initial_movespeed;
    image_speed = 0.1;
}
else{                      //if taking damage restict movement and color change
    image_blend = c_red;
    //image_speed = 0;
    //vsp = 0;
    //movespeed = 2;
    attacking = true;
}

//====Mob behavior
if(instance_exists(obj_mc)){
    if(!attacking){
        sprite_index = sprt_mob_golem_walk;
        if(distance_to_object(obj_mc)  &lt;= detection_range){
            if(obj_mc.x &gt; x){
                move = 1;
            }else{
                move = -1;
            }
        }
    }else{
        sprite_index = sprt_mob_golem_punch;
        if(move)    movespeed = sign(obj_mc.x - x) * 2;
        else        movespeed = sign(x - obj_mc.x) * 2;
        //move = 0;
        //image_index = 0;
        //image_speed = 0.1;
        if(image_index &gt;= 6){
            attacking = false;
        }
        
    }
}


////////////BASIC ENEMY CODE////////////
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
